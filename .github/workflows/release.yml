name: Release

on:
    push:
        tags:
        - 'v*'

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1

            - name: Docker Build Task
              run: docker build -t rai .

            - name: Get the version
              id: get_version
              run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

            - name: Docker Extract
              run: |
                  docker create -ti --name dummy rai bash \
                  && docker cp dummy:/home/rai/toolkit/target/release/rai-toolkit ./rai-toolkit-${{ steps.get_version.outputs.VERSION }}

            - name: Create Release
              id: create_release
              uses: actions/create-release@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ${{ steps.get_version.outputs.VERSION }}
                  body: |
                      Release: {{ steps.get_version.outputs.VERSION }}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./rai-toolkit-${{ steps.get_version.outputs.VERSION }}
                  asset_name: linux-rai-toolkit-${{ steps.get_version.outputs.VERSION }}
                  asset_content_type: application/octet-stream
